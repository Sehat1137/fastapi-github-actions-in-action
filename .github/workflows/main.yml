name: main

on:
  push:
    branches:
      - master

env:
  IMAGE_REPOSITORY: sehat1137/github-actions-in-action

jobs:
  # lint:
  #   name: "Ruff"
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: astral-sh/setup-uv@v5
  #     - run: uv sync --locked --all-extras --dev
  #     - uses: astral-sh/ruff-action@v3
  #       with:
  #         src: >-
  #           ./api
  #           ./tests
  #     - run: ruff format
  #     - run: ruff check

  # test:
  #   name: "Pytest"
  #   runs-on: ubuntu-latest
  #   needs: lint
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: astral-sh/setup-uv@v5
  #     - run: uv sync --locked --all-extras --dev
  #     - run: uv run pytest tests

  version:
    name: "Set version"
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install python-semantic-release
        run: pip install python-semantic-release
      - name: Generate version
        id: set-version
        run: |
          VERSION=$(semantic-release version --print-last-released)-${{ github.run_id }}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  build-image:
    name: "Build Docker image"
    runs-on: ubuntu-latest
    needs: version
    outputs:
      image: ${{ steps.set-image.outputs.image }}
    steps:
      - name: Set image
        id: set-image
        run: echo "image=$IMAGE_REPOSITORY:${{ needs.version.outputs.version }}" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

      - name: Build and load image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: ${{ env.image }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Verify image exists
        run: docker image inspect ${{ steps.set-image.outputs.image }} || exit 1

  scan-image:
    name: "Scan image with Trivy"
    needs: build-image
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Verify image availability
        run: |
          docker image inspect ${{ needs.build-image.outputs.image }} || exit 1

      - name: Scan image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ needs.build-image.outputs.image }}
          scan-type: image
          format: table
          severity: HIGH,CRITICAL
          ignore-unfixed: true
          exit-code: 1
          timeout: 5m

      - name: Upload scan report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-scan-report
          path: trivy-report.json

  push-image:
    name: "Push to Docker Hub"
    needs: scan-image
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ needs.build-image.outputs.image }}
          cache-from: type=gha
